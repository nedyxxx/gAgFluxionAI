local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local player = Players.LocalPlayer

-- Store original pet data
local originalData = {}

-- GUI Creation
local gui = Instance.new("ScreenGui")
gui.Name = "PetSizeWeightChanger"
gui.ResetOnSpawn = false
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
gui.Parent = player:WaitForChild("PlayerGui")

-- Main Frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 340, 0, 300)
frame.Position = UDim2.new(0.5, -170, 0.5, -150)
frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
frame.BorderSizePixel = 0
frame.Name = "PetSizeFrame"
frame.Parent = gui

local frameCorner = Instance.new("UICorner")
frameCorner.CornerRadius = UDim.new(0, 12)
frameCorner.Parent = frame

local stroke = Instance.new("UIStroke")
stroke.Color = Color3.fromRGB(60, 60, 60)
stroke.Thickness = 1
stroke.Parent = frame

-- Top Bar
local topBar = Instance.new("Frame")
topBar.Size = UDim2.new(1, 0, 0, 36)
topBar.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
topBar.BorderSizePixel = 0
topBar.Parent = frame

local topBarCorner = Instance.new("UICorner")
topBarCorner.CornerRadius = UDim.new(0, 12)
topBarCorner.Parent = topBar

-- Title
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -80, 1, 0)
title.Position = UDim2.new(0, 10, 0, 0)
title.BackgroundTransparency = 1
title.Font = Enum.Font.FredokaOne
title.TextSize = 20
title.TextColor3 = Color3.fromRGB(220, 220, 220)
title.Text = "Pet Weight Changer V2"
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = topBar

-- Minimize Button
local minimizeBtn = Instance.new("TextButton")
minimizeBtn.Size = UDim2.new(0, 28, 0, 28)
minimizeBtn.Position = UDim2.new(1, -64, 0.5, -14)
minimizeBtn.BackgroundTransparency = 1
minimizeBtn.Text = "â€”"
minimizeBtn.Font = Enum.Font.FredokaOne
minimizeBtn.TextSize = 22
minimizeBtn.TextColor3 = Color3.fromRGB(255, 200, 80)
minimizeBtn.Parent = topBar

-- Close Button
local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 28, 0, 28)
closeBtn.Position = UDim2.new(1, -32, 0.5, -14)
closeBtn.BackgroundTransparency = 1
closeBtn.Text = "X"
closeBtn.Font = Enum.Font.FredokaOne
closeBtn.TextSize = 22
closeBtn.TextColor3 = Color3.fromRGB(255, 90, 90)
closeBtn.Parent = topBar

-- Content Frame
local content = Instance.new("Frame")
content.Size = UDim2.new(1, -20, 1, -50)
content.Position = UDim2.new(0, 10, 0, 40)
content.BackgroundTransparency = 1
content.Name = "Content"
content.Parent = frame

-- Pet Info Label
local petInfoLabel = Instance.new("TextLabel")
petInfoLabel.Size = UDim2.new(1, 0, 0, 28)
petInfoLabel.Position = UDim2.new(0, 0, 0, 0)
petInfoLabel.BackgroundTransparency = 1
petInfoLabel.Font = Enum.Font.FredokaOne
petInfoLabel.TextSize = 18
petInfoLabel.TextColor3 = Color3.fromRGB(210, 210, 210)
petInfoLabel.Text = "No pet equipped"
petInfoLabel.TextXAlignment = Enum.TextXAlignment.Center
petInfoLabel.Parent = content

-- Input Box
local inputBox = Instance.new("TextBox")
inputBox.Size = UDim2.new(1, 0, 0, 40)
inputBox.Position = UDim2.new(0, 0, 0, 40)
inputBox.PlaceholderText = "Enter Weight (1 - 1000)"
inputBox.Font = Enum.Font.FredokaOne
inputBox.TextSize = 18
inputBox.TextColor3 = Color3.fromRGB(230, 230, 230)
inputBox.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
inputBox.Parent = content

local inputCorner = Instance.new("UICorner")
inputCorner.CornerRadius = UDim.new(0, 8)
inputCorner.Parent = inputBox

-- Apply Button
local applyBtn = Instance.new("TextButton")
applyBtn.Size = UDim2.new(1, 0, 0, 40)
applyBtn.Position = UDim2.new(0, 0, 0, 90)
applyBtn.BackgroundColor3 = Color3.fromRGB(90, 170, 90)
applyBtn.Text = "Apply Pet Weight"
applyBtn.Font = Enum.Font.FredokaOne
applyBtn.TextSize = 18
applyBtn.TextColor3 = Color3.fromRGB(240, 240, 240)
applyBtn.Parent = content

local applyCorner = Instance.new("UICorner")
applyCorner.CornerRadius = UDim.new(0, 8)
applyCorner.Parent = applyBtn

-- Reset Button
local resetBtn = Instance.new("TextButton")
resetBtn.Size = UDim2.new(1, 0, 0, 40)
resetBtn.Position = UDim2.new(0, 0, 0, 140)
resetBtn.BackgroundColor3 = Color3.fromRGB(180, 70, 70)
resetBtn.Text = "Reset to Normal Weight"
resetBtn.Font = Enum.Font.FredokaOne
resetBtn.TextSize = 18
resetBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
resetBtn.Parent = content

local resetCorner = Instance.new("UICorner")
resetCorner.CornerRadius = UDim.new(0, 8)
resetCorner.Parent = resetBtn

-- Footer
local footer = Instance.new("TextLabel")
footer.Size = UDim2.new(1, 0, 0, 20)
footer.Position = UDim2.new(0, 0, 1, -20)
footer.BackgroundTransparency = 1
footer.Font = Enum.Font.FredokaOne
footer.TextSize = 14
footer.TextColor3 = Color3.fromRGB(160, 160, 160)
footer.Text = "Tiktok: @lumeniax"
footer.TextXAlignment = Enum.TextXAlignment.Center
footer.Parent = content

-- Dragging Logic
-- ðŸ“± Auto-scaling for mobile & PC
local uiScale = Instance.new("UIScale")
uiScale.Parent = frame

local function updateScale()
	local screenSize = workspace.CurrentCamera.ViewportSize
	if screenSize.X <= 800 then
		uiScale.Scale = 0.8 -- smaller scale for mobile
	else
		uiScale.Scale = 1 -- default for PC
	end
end
updateScale()
workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(updateScale)

-- ðŸ“¦ Dragging Logic (PC + Mobile)
local UIS = game:GetService("UserInputService")
local dragging, dragStart, startPos

local function startDrag(input)
	dragging = true
	dragStart = input.Position
	startPos = frame.Position
	input.Changed:Connect(function()
		if input.UserInputState == Enum.UserInputState.End then
			dragging = false
		end
	end)
end

local function updateDrag(input)
	if dragging then
		local delta = input.Position - dragStart
		frame.Position = UDim2.new(
			startPos.X.Scale,
			startPos.X.Offset + delta.X,
			startPos.Y.Scale,
			startPos.Y.Offset + delta.Y
		)
	end
end

topBar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		startDrag(input)
	end
end)

topBar.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		updateDrag(input)
	end
end)

UIS.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		updateDrag(input)
	end
end)

-- Minimize & Close
local minimized = false
minimizeBtn.MouseButton1Click:Connect(function()
	minimized = not minimized
	if minimized then
		content.Visible = false
		frame.Size = UDim2.new(0, 340, 0, 36)
	else
		content.Visible = true
		frame.Size = UDim2.new(0, 340, 0, 300)
	end
end)

closeBtn.MouseButton1Click:Connect(function()
	gui:Destroy()
end)

-- ===== Pet Logic =====
local function getEquippedPetTool()
	local char = player.Character or player.CharacterAdded:Wait()
	for _, tool in pairs(char:GetChildren()) do
		if tool:IsA("Tool") then
			return tool
		end
	end
	return nil
end

local function setPetSize(petTool, scale)
	if petTool:IsA("Model") then
		petTool:ScaleTo(scale)
	elseif petTool:IsA("Tool") then
		for _, obj in ipairs(petTool:GetChildren()) do
			if obj:IsA("Model") then
				obj:ScaleTo(scale)
			elseif obj:IsA("BasePart") then
				local mesh = obj:FindFirstChildOfClass("SpecialMesh")
				if mesh then
					mesh.Scale = Vector3.new(scale, scale, scale)
				else
					obj.Size = Vector3.new(scale, scale, scale)
				end
			end
		end
	end
end

local function updatePetNameWithWeight(tool, weight)
	local name = tool.Name
	if name:find("%[%d+%.?%d* KG%]") then
		tool.Name = name:gsub("%[%d+%.?%d* KG%]", string.format("[%.2f KG]", weight))
	else
		tool.Name = name .. string.format(" [%.2f KG]", weight)
	end
end

local function removeWeightFromName(name)
	return (name:gsub("%s*%[%d+%.?%d* KG%]", ""))
end

local function saveOriginalData(tool)
	if not originalData[tool] then
		local originalScale = 1
		for _, obj in ipairs(tool:GetChildren()) do
			if obj:IsA("BasePart") then
				local mesh = obj:FindFirstChildOfClass("SpecialMesh")
				if mesh then
					originalScale = mesh.Scale.X
				else
					originalScale = obj.Size.X
				end
				break
			end
		end
		local weight = tonumber(tool.Name:match("%[(%d+%.?%d*) KG%]")) or originalScale
		originalData[tool] = {
			scale = originalScale,
			weight = weight,
			name = removeWeightFromName(tool.Name),
			currentScale = originalScale,
			currentWeight = weight,
		}
	end
end

local function updatePetInfoLabel()
	local tool = getEquippedPetTool()
	if tool then
		saveOriginalData(tool)
		petInfoLabel.Text = tool.Name
	else
		petInfoLabel.Text = "No pet equipped"
	end
end

-- Apply Button
applyBtn.MouseButton1Click:Connect(function()
	local input = tonumber(inputBox.Text)
	if not input or input < 1 or input > 1000 then
		warn("âš  Enter a valid number between 1 and 1000.")
		return
	end
	local tool = getEquippedPetTool()
	if tool then
		saveOriginalData(tool)
		setPetSize(tool, input)
		updatePetNameWithWeight(tool, input)
		originalData[tool].currentScale = input
		originalData[tool].currentWeight = input
		updatePetInfoLabel()
	else
		warn("No equipped pet tool found.")
	end
end)

-- Reset Button
resetBtn.MouseButton1Click:Connect(function()
	local tool = getEquippedPetTool()
	if tool and originalData[tool] then
		local orig = originalData[tool]
		setPetSize(tool, orig.scale)
		tool.Name = orig.name
		originalData[tool].currentScale = orig.scale
		originalData[tool].currentWeight = orig.weight
		updatePetInfoLabel()
	else
		warn("No original data saved for current pet or no pet equipped.")
	end
end)

-- Auto-update pet label
task.spawn(function()
	while gui.Parent do
		task.wait(0.3)
		updatePetInfoLabel()
	end
end)
