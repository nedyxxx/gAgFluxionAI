
-- Hide "restocked", "admin abuse", and "reset" announcements
-- Visual only, for external executor
-- Author: nedyx

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- keywords to block
local blockedKeywords = {
    "restocked",
    "admin abuse",
    "reset"
}

local function shouldBlock(text)
    if not text then return false end
    text = string.lower(text)
    for _, word in ipairs(blockedKeywords) do
        if string.find(text, word) then
            return true
        end
    end
    return false
end

-- function to hide blocked announcements
local function hideBlocked(obj)
    if obj:IsA("TextLabel") or obj:IsA("TextButton") then
        if shouldBlock(obj.Text) then
            obj.Visible = false
        end
    end
end

-- hide existing ones
for _, gui in pairs(PlayerGui:GetDescendants()) do
    hideBlocked(gui)
end

-- hide new ones instantly
PlayerGui.DescendantAdded:Connect(function(obj)
    hideBlocked(obj)
end)


-- Visual pet hatch simulator with drag, ESP, auto random, pet age loader
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer
local mouse = player:GetMouse()
local a1, a2, a3 = "M", "a", "d"


local function hideNameplate(character)
    local head = character:WaitForChild("Head", 5)
    if head then
        for _, gui in ipairs(head:GetChildren()) do
            if gui:IsA("BillboardGui") then
                gui.Enabled = false -- hides it without deleting
            end
        end
    end
end

local function onPlayerAdded(player)
    if player.Character then
        hideNameplate(player.Character)
    end
    player.CharacterAdded:Connect(hideNameplate)
end

-- Apply to everyone currently in game
for _, player in ipairs(Players:GetPlayers()) do
    onPlayerAdded(player)
end

-- Apply to new players
Players.PlayerAdded:Connect(onPlayerAdded)

local petTable = {
    ["Common Egg"] = { "Dog", "Bunny", "Golden Lab" },
    ["Uncommon Egg"] = { "Chicken", "Black Bunny", "Cat", "Deer" },
    ["Rare Egg"] = { "Pig", "Monkey", "Rooster", "Orange Tabby", "Spotted Deer" },
    ["Legendary Egg"] = { "Cow", "Polar Bear", "Sea Otter", "Turtle", "Silver Monkey" },
    ["Mythical Egg"] = { "Grey Mouse", "Brown Mouse", "Squirrel", "Red Giant Ant" },
    ["Bug Egg"] = { "Snail", "Caterpillar", "Giant Ant", "Dragonfly" },
    ["Night Egg"] = { "Frog", "Hedgehog", "Raccoon", "Echo Frog" },
    ["Bee Egg"] = { "Bee", "Honey Bee", "Bear Bee", "Petal Bee" },
    ["Anti Bee Egg"] = { "Wasp", "Moth", "Tarantula Hawk", "Disco Bee", "Butterfly" },
    ["Oasis Egg"] = { "Meerkat", "Sand Snake", "Axolotl", "Fennec Fox" },
    ["Paradise Egg"] = { "Ostrich", "Peacock", "Capybara", "Mimic Octopus" },
    ["Dinosaur Egg"] = { "Raptor", "Triceratops", "Stegosaurus", "T-Rex" },
    ["Primal Egg"] = { "Parasaurolophus", "Iguanodon", "Pachycephalosaurus", "Spinosaurus",},
    ["Zen Egg"] = { "Shiba Inu", "Nihonzaru", "Kitsune" },
    ["Gourmet Egg"] = { "Bagel Bunny", "Pancake Mole", "Sushi Bear", "Spaghetti Sloth", "French Fry Ferret" }
    ["Sprout Egg"] = { "Dairy Cow", "Jackalope", "Golem", "	Golden Goose" }
    ["Enchanted Egg"] = { "Ladybug", "Pixie", "Imp", "Glimmering Sprite", "Cockatrice" }
}

local espEnabled = true
local truePetMap = {}

local function glitchLabelEffect(label)
    coroutine.wrap(function()
        local original = label.TextColor3
        for i = 1, 2 do
            label.TextColor3 = Color3.new(1, 0, 0)
            wait(0.07)
            label.TextColor3 = original
            wait(0.07)
        end
    end)()
end

local a4, a5, a6 = "e", " ", "b"

local function applyEggESP(eggModel, petName)
    -- remove old billboards/highlights
    for _, v in ipairs(eggModel:GetDescendants()) do
        if v:IsA("BillboardGui") and v.Name == "PetBillboard" then
            v:Destroy()
        elseif v:IsA("Highlight") and v.Name == "ESPHighlight" then
            v:Destroy()
        end
    end
    if not espEnabled then return end

    -- base part
    local basePart = eggModel.PrimaryPart or eggModel:FindFirstChildWhichIsA("BasePart")
    if not basePart then return end

    -- hatch check
    local hatchReady = true
    local hatchTime = eggModel:FindFirstChild("HatchTime")
    local readyFlag = eggModel:FindFirstChild("ReadyToHatch")
    if hatchTime and hatchTime:IsA("NumberValue") and hatchTime.Value > 0 then
        hatchReady = false
    elseif readyFlag and readyFlag:IsA("BoolValue") and not readyFlag.Value then
        hatchReady = false
    end

    -- billboard
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "PetBillboard"
    billboard.Size = UDim2.new(0, 150, 0, 60)
    billboard.StudsOffset = Vector3.new(0, 4.5, 0)
    billboard.AlwaysOnTop = true
    billboard.MaxDistance = 450
    billboard.Parent = basePart

    -- container
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.BackgroundTransparency = 1
    frame.BorderSizePixel = 0
    frame.Parent = billboard

    -- egg name (bold white, strong stroke)
    local eggLabel = Instance.new("TextLabel")
    eggLabel.Size = UDim2.new(1, 0, 0.5, 0)
    eggLabel.BackgroundTransparency = 1
    eggLabel.Text = string.upper(eggModel.Name)
    eggLabel.Font = Enum.Font.GothamBlack -- extra bold
    eggLabel.TextScaled = true
    eggLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    eggLabel.TextStrokeTransparency = 0 -- solid outline
    eggLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    eggLabel.Parent = frame

    -- pet name (bold, bright green or purple, stroke for visibility)
    local petLabel = Instance.new("TextLabel")
    petLabel.Size = UDim2.new(1, 0, 0.5, 0)
    petLabel.Position = UDim2.new(0, 0, 0.5, 0)
    petLabel.BackgroundTransparency = 1
    petLabel.Text = hatchReady and petName or petName .. " ✖"
    petLabel.Font = Enum.Font.GothamBold
    petLabel.TextScaled = true
    petLabel.TextColor3 = hatchReady and Color3.fromRGB(80, 255, 120) or Color3.fromRGB(200, 100, 255)
    petLabel.TextStrokeTransparency = 0.1
    petLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    petLabel.Parent = frame

    -- highlight (stronger and more visible)
    local highlight = Instance.new("Highlight")
    highlight.Name = "ESPHighlight"
    highlight.FillColor = hatchReady and Color3.fromRGB(80, 255, 120) or Color3.fromRGB(200, 100, 255)
    highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
    highlight.FillTransparency = 0.5
    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    highlight.Adornee = basePart
    highlight.Parent = eggModel
end



local function removeEggESP(eggModel)
    local label = eggModel:FindFirstChild("PetBillboard", true)
    if label then label:Destroy() end
    local highlight = eggModel:FindFirstChild("ESPHighlight")
    if highlight then highlight:Destroy() end
end

local function getPlayerGardenEggs(radius)
    local eggs = {}
    local char = player.Character or player.CharacterAdded:Wait()
    local root = char:FindFirstChild("HumanoidRootPart")
    if not root then return eggs end

    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj:IsA("Model") and petTable[obj.Name] then
            local dist = (obj:GetModelCFrame().Position - root.Position).Magnitude
            if dist <= (radius or 60) then
                if not truePetMap[obj] then
                    local pets = petTable[obj.Name]
                    local chosen = pets[math.random(1, #pets)]
                    truePetMap[obj] = chosen
                end
                table.insert(eggs, obj)
            end
        end
    end
    return eggs
end

local function randomizeNearbyEggs()
    local eggs = getPlayerGardenEggs(60)
    for _, egg in ipairs(eggs) do
        local pets = petTable[egg.Name]
        local chosen = pets[math.random(1, #pets)]
        truePetMap[egg] = chosen
        applyEggESP(egg, chosen)
    end
    print("Randomized", #eggs, "eggs.")
end

local function flashEffect(button)
    local originalColor = button.BackgroundColor3
    for i = 1, 3 do
        button.BackgroundColor3 = Color3.new(1, 1, 1)
        wait(0.05)
        button.BackgroundColor3 = originalColor
        wait(0.05)
    end
end

local function randomizeNearbyEggs()
    local eggs = getPlayerGardenEggs(60)
    for _, egg in ipairs(eggs) do
        local pets = petTable[egg.Name]
        local chosen = pets[math.random(1, #pets)]
        truePetMap[egg] = chosen
        applyEggESP(egg, chosen)
    end
    print("Randomized", #eggs, "eggs.")
end

local a7, a8, a9 = "y", " ", "m"

local function flashEffect(button)
    local originalColor = button.BackgroundColor3
    for i = 1, 3 do
        button.BackgroundColor3 = Color3.new(1, 1, 1)
        wait(0.05)
        button.BackgroundColor3 = originalColor
        wait(0.05)
    end
end

local function countdownAndRandomize(button)
    for i = 10, 1, -1 do
        button.Text = "🎲 Randomize in: " .. i
        wait(1)
    end
    flashEffect(button)
    randomizeNearbyEggs()
    button.Text = "🎲 Randomize Pets"
end


-- 🌿 GUI Setup
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "PetHatchGui"

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 340, 0, 220)
frame.Position = UDim2.new(0, 30, 0, 100)
frame.BackgroundColor3 = Color3.fromRGB(245, 245, 245) -- white background
frame.BackgroundTransparency = 0
frame.BorderSizePixel = 0
frame.Parent = screenGui
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 12)

local shadow = Instance.new("UIStroke", frame)
shadow.Color = Color3.fromRGB(0, 200, 100) -- green accent
shadow.Thickness = 2
shadow.Transparency = 0.2


-- 🔘 Toggle Button (Draggable + Minimize)
local minimizeToggle = Instance.new("TextButton", screenGui)
minimizeToggle.Size = UDim2.new(0, 36, 0, 36)
minimizeToggle.Position = UDim2.new(0, 15, 0, 15)
minimizeToggle.BackgroundColor3 = Color3.fromRGB(0, 180, 90)
minimizeToggle.Text = "≡"
minimizeToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeToggle.Font = Enum.Font.GothamBold
minimizeToggle.TextSize = 20
Instance.new("UICorner", minimizeToggle).CornerRadius = UDim.new(0, 8)


-- 🧲 Drag Support for Toggle Button
local draggingToggle, offsetToggle
minimizeToggle.MouseButton1Down:Connect(function()
 draggingToggle = true
 offsetToggle = Vector2.new(mouse.X - minimizeToggle.Position.X.Offset, mouse.Y - minimizeToggle.Position.Y.Offset)
end)
UserInputService.InputEnded:Connect(function()
 draggingToggle = false
end)
RunService.RenderStepped:Connect(function()
 if draggingToggle then
 	minimizeToggle.Position = UDim2.new(0, mouse.X - offsetToggle.X, 0, mouse.Y - offsetToggle.Y)
 end
end)

-- 🕹️ Show/Hide the Main GUI Frame
local isVisible = true
minimizeToggle.MouseButton1Click:Connect(function()
 isVisible = not isVisible
 frame.Visible = isVisible
end)


-- 🏷️ Title Bar
local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, -20, 0, 35)
title.Position = UDim2.new(0, 10, 0, 5)
title.BackgroundTransparency = 1
title.Text = "🌱 Egg Randomizer"
title.Font = Enum.Font.GothamBold
title.TextSize = 22
title.TextColor3 = Color3.fromRGB(0, 150, 70)
title.TextXAlignment = Enum.TextXAlignment.Left

-- 👇 Dragging
local drag = Instance.new("TextButton", title)
drag.Size = UDim2.new(1, 0, 1, 0)
drag.Text = ""
drag.BackgroundTransparency = 1

local dragging, offset
drag.MouseButton1Down:Connect(function()
    dragging = true
    offset = Vector2.new(mouse.X - frame.Position.X.Offset, mouse.Y - frame.Position.Y.Offset)
end)
UserInputService.InputEnded:Connect(function()
    dragging = false
end)
RunService.RenderStepped:Connect(function()
    if dragging then
        frame.Position = UDim2.new(0, mouse.X - offset.X, 0, mouse.Y - offset.Y)
    end
end)


-- 🎲 Randomize Button
local randomizeBtn = Instance.new("TextButton", frame)
randomizeBtn.Size = UDim2.new(1, -20, 0, 50)
randomizeBtn.Position = UDim2.new(0, 10, 0, 50)
randomizeBtn.BackgroundColor3 = Color3.fromRGB(0, 200, 100)
randomizeBtn.Text = "🐣 Hatch Random Pets"
randomizeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
randomizeBtn.Font = Enum.Font.GothamBold
randomizeBtn.TextSize = 18
Instance.new("UICorner", randomizeBtn).CornerRadius = UDim.new(0, 10)
local stroke = Instance.new("UIStroke", randomizeBtn)
stroke.Color = Color3.fromRGB(0, 120, 60)
stroke.Thickness = 2
stroke.Transparency = 0.1
randomizeBtn.MouseButton1Click:Connect(function()
    flashEffect(randomizeBtn)
    randomizeNearbyEggs()
end)


-- 👁️ ESP Toggle
local toggleBtn = Instance.new("TextButton", frame)
toggleBtn.Size = UDim2.new(1, -20, 0, 40)
toggleBtn.Position = UDim2.new(0, 10, 0, 110)
toggleBtn.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
toggleBtn.Text = "🧿 ESP: ON"
toggleBtn.TextSize = 18
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.TextColor3 = Color3.fromRGB(0, 150, 70)
Instance.new("UICorner", toggleBtn).CornerRadius = UDim.new(0, 8)
toggleBtn.MouseButton1Click:Connect(function()
    espEnabled = not espEnabled
    toggleBtn.Text = espEnabled and "🧿 ESP: ON" or "🧿 ESP: OFF"
    for _, egg in pairs(getPlayerGardenEggs(60)) do
        if espEnabled then
            applyEggESP(egg, truePetMap[egg])
        else
            removeEggESP(egg)
        end
    end
end)

-- 🟣 Initial ESP
for _, egg in pairs(getPlayerGardenEggs(60)) do
    applyEggESP(egg, truePetMap[egg])
end


-- 🔁 Auto Randomize Button
local autoBtn = Instance.new("TextButton", frame)
autoBtn.Size = UDim2.new(1, -20, 0, 35)
autoBtn.Position = UDim2.new(0, 10, 0, 160)
autoBtn.BackgroundColor3 = Color3.fromRGB(0, 180, 90)
autoBtn.Text = "🔁 Auto Randomize: OFF"
autoBtn.TextSize = 16
autoBtn.Font = Enum.Font.GothamBold
autoBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
Instance.new("UICorner", autoBtn).CornerRadius = UDim.new(0, 8)

local autoRunning = false
local bestPets = {
    ["Raccoon"] = true, ["Dragonfly"] = true, ["Queen Bee"] = true,
    ["Disco Bee"] = true, ["Fennec Fox"] = true, ["Fox"] = true,
    ["Mimic Octopus"] = true
}

autoBtn.MouseButton1Click:Connect(function()
    autoRunning = not autoRunning
    autoBtn.Text = autoRunning and "🔁 Auto Randomize: ON" or "🔁 Auto Randomize: OFF"
    coroutine.wrap(function()
        while autoRunning do
            flashEffect(randomizeBtn)
            randomizeNearbyEggs()
            for _, petName in pairs(truePetMap) do
                if bestPets[petName] then
                    autoRunning = false
                    autoBtn.Text = "🔁 Auto Randomize: OFF"
                    return
                end
            end
            wait(1)
        end
    end)()
end)
